extend type Query  {
    getDevicesFromUser: GetDevicesFromUserPayload!
}

extend type Mutation {
    upsertDevice(data: UpsertDeviceInput!): UpsertDevicePayload!
    deleteDevice(data: DeleteDeviceInput!): Boolean!
}

type Device {
    id: ID!
    name: String!
    user: User!
    creation_date: Datetime!
    min_c: Float!
    average_consumption: Float!
    max_c: Float!
    freq_time: Float!
    turn_off: Boolean!
    sort: String!
    metering: Int!
}

type UpsertDevicePayload {
    device: Device
    success: Boolean!
    errors: [String!]
}

type DevicePayload {
    device: Device
    success: Boolean!
    errors: [String!]
}

type GetDevicesFromUserPayload {
    devices: [Device!]
    success: Boolean!
    errors: [String!]
}

input UpsertDeviceInput {
    device_id: ID
    name: String
    min_c: Float!
    average_consumption: Float!
    max_c: Float!
    freq_time: Float!
    turn_off: Boolean!
    sort: String!
    metering: Int!
}

input DeleteDeviceInput {
    device_id: ID!
}
